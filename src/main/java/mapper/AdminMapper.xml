<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.AdminMapper">
    <!--Personnel CRUD-->
    <select id="getStaffList" resultType="entity.Staff">
        select * from mdong4.StaffInfo
    </select>

    <insert id="createNewStaff">
        insert into StaffInfo(StaffID,name,age,gender,phone,emailAddress,isPublisher,isAdmin,address,paycheck,paycheckDate,jobType)
        values (#{param1}, #{param2}, #{param3}, #{param4}, #{param5}, #{param6}, #{param7}, #{param8}, #{param9}, #{param10}, #{param11}, #{param12})
    </insert>

    <update id="updateStaff">
        update StaffInfo
        set name=#{param2}, age=#{param3}, gender=#{param4}, phone=#{param5}, emailAddress=#{param6}, isPublisher=#{param7}, isAdmin=#{param8}, address=#{param9}, paycheck=#{param10}, paycheckDate=#{param11}, jobType=#{param12}
    </update>

    <delete id="deleteStaff">
        delete from StaffInfo
        where StaffID=${StaffID}
    </delete>
<!--Distributor CRUD-->
    <select id="getDistributorList" resultType="entity.Distributor">
        select * from mdong4.Distributor
    </select>

    <insert id="createNewDistributor">
        insert into Distributor(distributorID, name, balance, city, streetAddress, type, contactPerson, phoneNumber)
        values (#{param1}, #{param2}, #{param3}, #{param4}, #{param5}, #{param6}, #{param7}, #{param8})
    </insert>

    <update id="updateDistributor">
        update Distributor
        set name=#{param2}, balance=#{param3}, city=#{param4}, streetAddress=#{param5}, type=#{param6}, contactPerson=#{param7}, phoneNumber=#{param8}
        where distributorID=#{param1}
    </update>
    <delete id="deleteDistributor">
        delete from Distributor
        where distributorID=${distributorID}
    </delete>

    <!--    place an order-->
    <insert id="placeOrder">
        insert into
        OrderInfo(distributorID, publicationID, numberOfCopies, deliveryDate, orderDate, shippingCost, pricePerCopy)
        values (#{param1}, #{param2}, #{param3}, null, #{param4}, 0, 0)
    </insert>
    <!--    check order information-->
    <select id="checkOrder" resultType="entity.Order">
        select * from OrderInfo where orderID=#{param1}
    </select>
    <!--    delete an order-->
    <delete id="deleteOrder">
        delete from OrderInfo
        where orderID=#{param1}
    </delete>
    <!--    update an order-->
    <update id="updateOrder">
        update OrderInfo
        set distributorID=#{param2},publicationID=#{param3},numberOfCopies=#{param4},deliveryDate=#{param5},shippingCost=#{param6},pricePerCopy=#{param7}
        where orderID=#{param1}
    </update>
    <!--    calculate balance 1. find the unpaid order-->
    <select id="findUnpaidOrder" resultType="entity.Order">
        select * from OrderInfo where distributorID=#{param1} and not exists (select orderID from Payment where Payment.orderID=OrderInfo.orderID)
    </select>
    <!--    calculate balance 2.update-->
    <update id="updateBalance">
        update Distributor
        set balance=#{param2}
        where distributorID=#{param1}
    </update>
    <!--    get order belong to certain distributor-->
    <select id="getOrderList" parameterType="int" resultType="entity.Order">
        select * from mdong4.OrderInfo where distributorID=#{ID}
    </select>
    <!--    pay an order-->
    <update id="payOrder" parameterType="int">
        insert into Payment(orderID, totalPayment)
        values (#{param1},#{param2})
    </update>
    <!--    delete payment-->
    <delete id="deletePayment">
        delete from Payment
        where orderID=#{param1}
    </delete>
    <!--    check one payment-->
    <select id="checkPayment" resultType="entity.Payment">
        select * from Payment where orderID=#{param1}
    </select>
    <!--    check all payment-->
    <select id="checkAllPayment" resultType="entity.Payment">
        select * from Payment
    </select>

</mapper>